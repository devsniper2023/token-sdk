buildscript {
    ext.kotlin_version = '1.0.3'
    ext.corda_version = '0.4-SNAPSHOT'
    ext.quasar_version = '0.7.6'
    ext.jersey_version = '2.23.1'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.r3corda:quasarutils:$corda_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'com.r3corda.quasarutils'
apply plugin: Cordformation
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Corda integration dependencies
    compile "com.r3corda:core:$corda_version"
    compile "com.r3corda:contracts:$corda_version"
    compile "com.r3corda:node:$corda_version"
    compile "com.r3corda:corda:$corda_version"

    // Javax is required for webapis
    compile "org.glassfish.jersey.core:jersey-server:${jersey_version}"

    // Cordapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
    compile "com.r3corda:vega:$corda_version"
}

task deployNodes(type: Cordform, dependsOn: ['build']) {
    directory "./build/nodes"
    networkMap "Notary"
    node {
        name "Notary"
        dirName "notary"
        nearestCity "London"
        notary true
        advertisedServices = []
        artemisPort 12345
        webPort 12346
        cordapps = ['vega']
    }
    node {
        name "NodeA"
        dirName "nodea"
        nearestCity "London"
        advertisedServices = []
        artemisPort 31337
        webPort 31339
        cordapps = ['vega']
    }
    node {
        name "NodeB"
        dirName "nodeb"
        nearestCity "New York"
        advertisedServices = []
        artemisPort 31338
        webPort 31340
        cordapps = ['vega']
    }
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

quasarScan.dependsOn('classes')

// TODO: Implement/ get plugin from the main corda codebase
publishing {
    publications {
        contracts(MavenPublication) {
            //from components.java
            //artifactId 'contracts'
//
            //artifact sourceJar
            //artifact javadocJar
        }
    }
}